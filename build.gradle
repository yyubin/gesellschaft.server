plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.5'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'org.ekujo'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	// map struct
	implementation "org.mapstruct:mapstruct:1.5.5.Final"
	annotationProcessor "org.mapstruct:mapstruct-processor:1.5.5.Final"

	// querydsl
	implementation 'io.github.openfeign.querydsl:querydsl-jpa:6.10.1'
	implementation 'io.github.openfeign.querydsl:querydsl-core:6.10.1'

	annotationProcessor 'io.github.openfeign.querydsl:querydsl-apt:6.10.1:jpa'
	annotationProcessor 'jakarta.persistence:jakarta.persistence-api'
	annotationProcessor 'jakarta.annotation:jakarta.annotation-api'
}

def generatedQuerydslDir = layout.buildDirectory.dir("generated/sources/annotationProcessor/java/main").get().asFile

sourceSets {
	main {
		java {
			srcDirs += generatedQuerydslDir
		}
	}
}

tasks.withType(JavaCompile).configureEach {
	options.compilerArgs += ["-Aquerydsl.generatedAnnotationProcessor=QUERYDSL", "-s", generatedQuerydslDir.toString()]
}

tasks.named('clean') {
	doFirst {
		delete generatedQuerydslDir
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
