name: Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      DOCKER_IMAGE: cassidy65/gesellschaft
    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ env.DOCKER_IMAGE }}:latest

      # STEP: Save .env.prod from secret to file
      - name: Save .env.prod from secret
        run: echo "${{ secrets.AWS_ENV_PROD }}" > .env.prod

      # STEP: Upload .env.prod to EC2
      - name: Upload .env.prod to EC2
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          source: ".env.prod"
          target: "/home/ubuntu/.env.prod"

      # STEP: SSH into EC2 and redeploy container
      - name: Deploy to EC2 via SSH
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            docker stop gesellschaft || true
            docker rm gesellschaft || true
            docker pull ${{ env.DOCKER_IMAGE }}:latest
            docker run -d \
              --name gesellschaft \
              --env-file /home/ubuntu/.env.prod \
              -p 8080:8080 \
              ${{ env.DOCKER_IMAGE }}:latest
